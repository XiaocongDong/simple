// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parse it should parse assignment 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 6,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    AssignmentExpression {
      "left": Identifier {
        "loc": Object {
          "end": Object {
            "column": 1,
            "line": 1,
          },
          "start": Object {
            "column": 1,
            "line": 1,
          },
        },
        "name": "a",
      },
      "loc": Object {
        "end": Object {
          "column": 6,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "right": NumberLiteral {
        "loc": Object {
          "end": Object {
            "column": 6,
            "line": 1,
          },
          "start": Object {
            "column": 5,
            "line": 1,
          },
        },
        "type": "NUMBER_LITERAL",
        "value": 10,
      },
      "type": "ASSIGNMENT_EXPRESSION",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse bracket member expression 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 12,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": MemberExpression {
            "loc": Object {
              "end": Object {
                "column": 12,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "object": Identifier {
              "loc": Object {
                "end": Object {
                  "column": 9,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "name": "b",
            },
            "property": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 12,
                  "line": 1,
                },
                "start": Object {
                  "column": 11,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 10,
            },
          },
          "loc": Object {
            "end": Object {
              "column": 12,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 12,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse break statement 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 5,
      "line": 3,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    WhileStatement {
      "body": BlockStatement {
        "body": StatementList {
          "loc": Object {
            "end": Object {
              "column": 11,
              "line": 2,
            },
            "start": Object {
              "column": 7,
              "line": 2,
            },
          },
          "statements": Array [
            BreakStatement {
              "loc": Object {
                "end": Object {
                  "column": 11,
                  "line": 2,
                },
                "start": Object {
                  "column": 7,
                  "line": 2,
                },
              },
              "type": "BREAK_STATEMENT",
            },
          ],
          "type": "STATEMENT_LIST",
        },
        "loc": Object {
          "end": Object {
            "column": 5,
            "line": 3,
          },
          "start": Object {
            "column": 12,
            "line": 1,
          },
        },
        "type": "BLOCK_STATEMENT",
      },
      "loc": Object {
        "end": Object {
          "column": 5,
          "line": 3,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "test": BooleanLiteral {
        "loc": Object {
          "end": Object {
            "column": 10,
            "line": 1,
          },
          "start": Object {
            "column": 7,
            "line": 1,
          },
        },
        "type": "BOOLEAN_LITERAL",
        "value": true,
      },
      "type": "WHILE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse call expression 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 14,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": CallExpression {
            "arguments": Array [],
            "callee": Identifier {
              "loc": Object {
                "end": Object {
                  "column": 12,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "name": "call",
            },
            "loc": Object {
              "end": Object {
                "column": 14,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "type": "CALL_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 14,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 14,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse chaining assignment 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 10,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    AssignmentExpression {
      "left": Identifier {
        "loc": Object {
          "end": Object {
            "column": 1,
            "line": 1,
          },
          "start": Object {
            "column": 1,
            "line": 1,
          },
        },
        "name": "a",
      },
      "loc": Object {
        "end": Object {
          "column": 10,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "right": AssignmentExpression {
        "left": Identifier {
          "loc": Object {
            "end": Object {
              "column": 5,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "name": "b",
        },
        "loc": Object {
          "end": Object {
            "column": 10,
            "line": 1,
          },
          "start": Object {
            "column": 5,
            "line": 1,
          },
        },
        "right": NumberLiteral {
          "loc": Object {
            "end": Object {
              "column": 10,
              "line": 1,
            },
            "start": Object {
              "column": 9,
              "line": 1,
            },
          },
          "type": "NUMBER_LITERAL",
          "value": 10,
        },
        "type": "ASSIGNMENT_EXPRESSION",
      },
      "type": "ASSIGNMENT_EXPRESSION",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse dot member expression 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 11,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": MemberExpression {
            "loc": Object {
              "end": Object {
                "column": 11,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "object": Identifier {
              "loc": Object {
                "end": Object {
                  "column": 9,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "name": "b",
            },
            "property": Identifier {
              "loc": Object {
                "end": Object {
                  "column": 11,
                  "line": 1,
                },
                "start": Object {
                  "column": 11,
                  "line": 1,
                },
              },
              "name": "a",
            },
          },
          "loc": Object {
            "end": Object {
              "column": 11,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 11,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse empty array 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 10,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": ArrayExpression {
            "elements": Array [],
            "loc": Object {
              "end": Object {
                "column": 10,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "type": "ARRAY_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 10,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 10,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse empty object 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 10,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": ObjectExpression {
            "loc": Object {
              "end": Object {
                "column": 10,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "properties": Array [],
            "type": "OBJECT_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 10,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 10,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse empty params function 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 5,
      "line": 3,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    FunctionDeclaration {
      "body": BlockStatement {
        "body": StatementList {
          "loc": Object {
            "end": Object {
              "column": 16,
              "line": 2,
            },
            "start": Object {
              "column": 7,
              "line": 2,
            },
          },
          "statements": Array [
            VariableStatement {
              "declarations": Array [
                VariableDeclarator {
                  "id": "a",
                  "init": NumberLiteral {
                    "loc": Object {
                      "end": Object {
                        "column": 16,
                        "line": 2,
                      },
                      "start": Object {
                        "column": 15,
                        "line": 2,
                      },
                    },
                    "type": "NUMBER_LITERAL",
                    "value": 10,
                  },
                  "loc": Object {
                    "end": Object {
                      "column": 16,
                      "line": 2,
                    },
                    "start": Object {
                      "column": 11,
                      "line": 2,
                    },
                  },
                  "type": "VARIABLE_DECLARATOR",
                },
              ],
              "kind": "LET",
              "loc": Object {
                "end": Object {
                  "column": 16,
                  "line": 2,
                },
                "start": Object {
                  "column": 7,
                  "line": 2,
                },
              },
              "type": "VARIABLE_STATEMENT",
            },
          ],
          "type": "STATEMENT_LIST",
        },
        "loc": Object {
          "end": Object {
            "column": 5,
            "line": 3,
          },
          "start": Object {
            "column": 16,
            "line": 1,
          },
        },
        "type": "BLOCK_STATEMENT",
      },
      "id": Identifier {
        "loc": Object {
          "end": Object {
            "column": 12,
            "line": 1,
          },
          "start": Object {
            "column": 10,
            "line": 1,
          },
        },
        "name": "sum",
      },
      "loc": Object {
        "end": Object {
          "column": 5,
          "line": 3,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "params": Array [],
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse equal 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 22,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": BinaryExpression {
            "left": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 9,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 1,
            },
            "loc": Object {
              "end": Object {
                "column": 22,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "operator": "EQUAL",
            "right": BinaryExpression {
              "left": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 14,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 14,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 1,
              },
              "loc": Object {
                "end": Object {
                  "column": 22,
                  "line": 1,
                },
                "start": Object {
                  "column": 14,
                  "line": 1,
                },
              },
              "operator": "PLUS",
              "right": BinaryExpression {
                "left": NumberLiteral {
                  "loc": Object {
                    "end": Object {
                      "column": 18,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 18,
                      "line": 1,
                    },
                  },
                  "type": "NUMBER_LITERAL",
                  "value": 2,
                },
                "loc": Object {
                  "end": Object {
                    "column": 22,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 18,
                    "line": 1,
                  },
                },
                "operator": "MULTIPLY",
                "right": NumberLiteral {
                  "loc": Object {
                    "end": Object {
                      "column": 22,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 22,
                      "line": 1,
                    },
                  },
                  "type": "NUMBER_LITERAL",
                  "value": 3,
                },
                "type": "BINARY_EXPRESSION",
              },
              "type": "BINARY_EXPRESSION",
            },
            "type": "BINARY_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 22,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 22,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse expression in if statement 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 5,
      "line": 2,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    IfStatement {
      "consequent": BlockStatement {
        "body": StatementList {
          "loc": Object {
            "end": null,
            "start": null,
          },
          "statements": Array [],
          "type": "STATEMENT_LIST",
        },
        "loc": Object {
          "end": Object {
            "column": 5,
            "line": 2,
          },
          "start": Object {
            "column": 22,
            "line": 1,
          },
        },
        "type": "BLOCK_STATEMENT",
      },
      "loc": Object {
        "end": Object {
          "column": 5,
          "line": 2,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "test": BinaryExpression {
        "left": Identifier {
          "loc": Object {
            "end": Object {
              "column": 4,
              "line": 1,
            },
            "start": Object {
              "column": 4,
              "line": 1,
            },
          },
          "name": "a",
        },
        "loc": Object {
          "end": Object {
            "column": 19,
            "line": 1,
          },
          "start": Object {
            "column": 4,
            "line": 1,
          },
        },
        "operator": "EQUAL",
        "right": BinaryExpression {
          "left": Identifier {
            "loc": Object {
              "end": Object {
                "column": 9,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "name": "b",
          },
          "loc": Object {
            "end": Object {
              "column": 19,
              "line": 1,
            },
            "start": Object {
              "column": 9,
              "line": 1,
            },
          },
          "operator": "PLUS",
          "right": BinaryExpression {
            "left": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 14,
                  "line": 1,
                },
                "start": Object {
                  "column": 13,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 10,
            },
            "loc": Object {
              "end": Object {
                "column": 19,
                "line": 1,
              },
              "start": Object {
                "column": 13,
                "line": 1,
              },
            },
            "operator": "MULTIPLY",
            "right": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 19,
                  "line": 1,
                },
                "start": Object {
                  "column": 18,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 20,
            },
            "type": "BINARY_EXPRESSION",
          },
          "type": "BINARY_EXPRESSION",
        },
        "type": "BINARY_EXPRESSION",
      },
      "type": "BOOLEAN_LITERAL",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse for statement 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 5,
      "line": 3,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    ForStatement {
      "body": BlockStatement {
        "body": StatementList {
          "loc": Object {
            "end": Object {
              "column": 20,
              "line": 2,
            },
            "start": Object {
              "column": 7,
              "line": 2,
            },
          },
          "statements": Array [
            ExpressionStatement {
              "expression": CallExpression {
                "arguments": Array [
                  Identifier {
                    "loc": Object {
                      "end": Object {
                        "column": 19,
                        "line": 2,
                      },
                      "start": Object {
                        "column": 19,
                        "line": 2,
                      },
                    },
                    "name": "a",
                  },
                ],
                "callee": MemberExpression {
                  "loc": Object {
                    "end": Object {
                      "column": 17,
                      "line": 2,
                    },
                    "start": Object {
                      "column": 7,
                      "line": 2,
                    },
                  },
                  "object": Identifier {
                    "loc": Object {
                      "end": Object {
                        "column": 13,
                        "line": 2,
                      },
                      "start": Object {
                        "column": 7,
                        "line": 2,
                      },
                    },
                    "name": "console",
                  },
                  "property": Identifier {
                    "loc": Object {
                      "end": Object {
                        "column": 17,
                        "line": 2,
                      },
                      "start": Object {
                        "column": 15,
                        "line": 2,
                      },
                    },
                    "name": "log",
                  },
                },
                "loc": Object {
                  "end": Object {
                    "column": 20,
                    "line": 2,
                  },
                  "start": Object {
                    "column": 7,
                    "line": 2,
                  },
                },
                "type": "CALL_EXPRESSION",
              },
              "loc": Object {
                "end": Object {
                  "column": 20,
                  "line": 2,
                },
                "start": Object {
                  "column": 7,
                  "line": 2,
                },
              },
              "type": "EXPRESSION_STATEMENT",
            },
          ],
          "type": "STATEMENT_LIST",
        },
        "loc": Object {
          "end": Object {
            "column": 5,
            "line": 3,
          },
          "start": Object {
            "column": 30,
            "line": 1,
          },
        },
        "type": "BLOCK_STATEMENT",
      },
      "init": VariableStatement {
        "declarations": Array [
          VariableDeclarator {
            "id": "a",
            "init": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 14,
                  "line": 1,
                },
                "start": Object {
                  "column": 13,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 10,
            },
            "loc": Object {
              "end": Object {
                "column": 14,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "type": "VARIABLE_DECLARATOR",
          },
        ],
        "kind": "LET",
        "loc": Object {
          "end": Object {
            "column": 14,
            "line": 1,
          },
          "start": Object {
            "column": 5,
            "line": 1,
          },
        },
        "type": "VARIABLE_STATEMENT",
      },
      "loc": Object {
        "end": Object {
          "column": 5,
          "line": 3,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "test": BinaryExpression {
        "left": Identifier {
          "loc": Object {
            "end": Object {
              "column": 17,
              "line": 1,
            },
            "start": Object {
              "column": 17,
              "line": 1,
            },
          },
          "name": "a",
        },
        "loc": Object {
          "end": Object {
            "column": 22,
            "line": 1,
          },
          "start": Object {
            "column": 17,
            "line": 1,
          },
        },
        "operator": "LESS_THAN",
        "right": NumberLiteral {
          "loc": Object {
            "end": Object {
              "column": 22,
              "line": 1,
            },
            "start": Object {
              "column": 21,
              "line": 1,
            },
          },
          "type": "NUMBER_LITERAL",
          "value": 10,
        },
        "type": "BINARY_EXPRESSION",
      },
      "type": "FOR_STATEMENT",
      "update": ExpressionStatement {
        "expression": UpdateExpression {
          "argument": Identifier {
            "loc": Object {
              "end": Object {
                "column": 25,
                "line": 1,
              },
              "start": Object {
                "column": 25,
                "line": 1,
              },
            },
            "name": "a",
          },
          "loc": Object {
            "end": Object {
              "column": 27,
              "line": 1,
            },
            "start": Object {
              "column": 25,
              "line": 1,
            },
          },
          "operator": "PLUS_PLUS",
          "prefix": false,
          "type": "UPDATE_EXPRESSION",
        },
        "loc": Object {
          "end": Object {
            "column": 27,
            "line": 1,
          },
          "start": Object {
            "column": 25,
            "line": 1,
          },
        },
        "type": "EXPRESSION_STATEMENT",
      },
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse function 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 5,
      "line": 3,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    FunctionDeclaration {
      "body": BlockStatement {
        "body": StatementList {
          "loc": Object {
            "end": null,
            "start": null,
          },
          "statements": Array [],
          "type": "STATEMENT_LIST",
        },
        "loc": Object {
          "end": Object {
            "column": 5,
            "line": 3,
          },
          "start": Object {
            "column": 23,
            "line": 1,
          },
        },
        "type": "BLOCK_STATEMENT",
      },
      "id": Identifier {
        "loc": Object {
          "end": Object {
            "column": 12,
            "line": 1,
          },
          "start": Object {
            "column": 10,
            "line": 1,
          },
        },
        "name": "sum",
      },
      "loc": Object {
        "end": Object {
          "column": 5,
          "line": 3,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "params": Array [
        Identifier {
          "loc": Object {
            "end": Object {
              "column": 14,
              "line": 1,
            },
            "start": Object {
              "column": 14,
              "line": 1,
            },
          },
          "name": "a",
        },
        Identifier {
          "loc": Object {
            "end": Object {
              "column": 17,
              "line": 1,
            },
            "start": Object {
              "column": 17,
              "line": 1,
            },
          },
          "name": "b",
        },
        Identifier {
          "loc": Object {
            "end": Object {
              "column": 20,
              "line": 1,
            },
            "start": Object {
              "column": 20,
              "line": 1,
            },
          },
          "name": "c",
        },
      ],
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse identifier 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 9,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": Identifier {
            "loc": Object {
              "end": Object {
                "column": 9,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "name": "b",
          },
          "loc": Object {
            "end": Object {
              "column": 9,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 9,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse if statement 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 5,
      "line": 3,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    IfStatement {
      "consequent": BlockStatement {
        "body": StatementList {
          "loc": Object {
            "end": Object {
              "column": 16,
              "line": 2,
            },
            "start": Object {
              "column": 7,
              "line": 2,
            },
          },
          "statements": Array [
            VariableStatement {
              "declarations": Array [
                VariableDeclarator {
                  "id": "c",
                  "init": NumberLiteral {
                    "loc": Object {
                      "end": Object {
                        "column": 16,
                        "line": 2,
                      },
                      "start": Object {
                        "column": 15,
                        "line": 2,
                      },
                    },
                    "type": "NUMBER_LITERAL",
                    "value": 10,
                  },
                  "loc": Object {
                    "end": Object {
                      "column": 16,
                      "line": 2,
                    },
                    "start": Object {
                      "column": 11,
                      "line": 2,
                    },
                  },
                  "type": "VARIABLE_DECLARATOR",
                },
              ],
              "kind": "LET",
              "loc": Object {
                "end": Object {
                  "column": 16,
                  "line": 2,
                },
                "start": Object {
                  "column": 7,
                  "line": 2,
                },
              },
              "type": "VARIABLE_STATEMENT",
            },
          ],
          "type": "STATEMENT_LIST",
        },
        "loc": Object {
          "end": Object {
            "column": 5,
            "line": 3,
          },
          "start": Object {
            "column": 10,
            "line": 1,
          },
        },
        "type": "BLOCK_STATEMENT",
      },
      "loc": Object {
        "end": Object {
          "column": 5,
          "line": 3,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "test": BooleanLiteral {
        "loc": Object {
          "end": Object {
            "column": 7,
            "line": 1,
          },
          "start": Object {
            "column": 4,
            "line": 1,
          },
        },
        "type": "BOOLEAN_LITERAL",
        "value": true,
      },
      "type": "BOOLEAN_LITERAL",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse mixed bracket and dot member expression 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 23,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": MemberExpression {
            "loc": Object {
              "end": Object {
                "column": 23,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "object": MemberExpression {
              "loc": Object {
                "end": Object {
                  "column": 20,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "object": MemberExpression {
                "loc": Object {
                  "end": Object {
                    "column": 17,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 9,
                    "line": 1,
                  },
                },
                "object": MemberExpression {
                  "loc": Object {
                    "end": Object {
                      "column": 14,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 9,
                      "line": 1,
                    },
                  },
                  "object": Identifier {
                    "loc": Object {
                      "end": Object {
                        "column": 11,
                        "line": 1,
                      },
                      "start": Object {
                        "column": 9,
                        "line": 1,
                      },
                    },
                    "name": "arr",
                  },
                  "property": NumberLiteral {
                    "loc": Object {
                      "end": Object {
                        "column": 14,
                        "line": 1,
                      },
                      "start": Object {
                        "column": 13,
                        "line": 1,
                      },
                    },
                    "type": "NUMBER_LITERAL",
                    "value": 10,
                  },
                },
                "property": Identifier {
                  "loc": Object {
                    "end": Object {
                      "column": 17,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 17,
                      "line": 1,
                    },
                  },
                  "name": "a",
                },
              },
              "property": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 20,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 19,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 11,
              },
            },
            "property": Identifier {
              "loc": Object {
                "end": Object {
                  "column": 23,
                  "line": 1,
                },
                "start": Object {
                  "column": 23,
                  "line": 1,
                },
              },
              "name": "c",
            },
          },
          "loc": Object {
            "end": Object {
              "column": 23,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 23,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse mixed bracket, dot and call expression 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 22,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": MemberExpression {
            "loc": Object {
              "end": Object {
                "column": 22,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "object": CallExpression {
              "arguments": Array [
                NumberLiteral {
                  "loc": Object {
                    "end": Object {
                      "column": 17,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 17,
                      "line": 1,
                    },
                  },
                  "type": "NUMBER_LITERAL",
                  "value": 1,
                },
                NumberLiteral {
                  "loc": Object {
                    "end": Object {
                      "column": 19,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 19,
                      "line": 1,
                    },
                  },
                  "type": "NUMBER_LITERAL",
                  "value": 2,
                },
              ],
              "callee": MemberExpression {
                "loc": Object {
                  "end": Object {
                    "column": 14,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 9,
                    "line": 1,
                  },
                },
                "object": Identifier {
                  "loc": Object {
                    "end": Object {
                      "column": 11,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 9,
                      "line": 1,
                    },
                  },
                  "name": "arr",
                },
                "property": NumberLiteral {
                  "loc": Object {
                    "end": Object {
                      "column": 14,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 13,
                      "line": 1,
                    },
                  },
                  "type": "NUMBER_LITERAL",
                  "value": 10,
                },
              },
              "loc": Object {
                "end": Object {
                  "column": 20,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "type": "CALL_EXPRESSION",
            },
            "property": Identifier {
              "loc": Object {
                "end": Object {
                  "column": 22,
                  "line": 1,
                },
                "start": Object {
                  "column": 22,
                  "line": 1,
                },
              },
              "name": "a",
            },
          },
          "loc": Object {
            "end": Object {
              "column": 22,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 22,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse mixed update and binary expression 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 20,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": BinaryExpression {
            "left": Identifier {
              "loc": Object {
                "end": Object {
                  "column": 9,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "name": "b",
            },
            "loc": Object {
              "end": Object {
                "column": 20,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "operator": "PLUS",
            "right": BinaryExpression {
              "left": UpdateExpression {
                "argument": Identifier {
                  "loc": Object {
                    "end": Object {
                      "column": 13,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 13,
                      "line": 1,
                    },
                  },
                  "name": "a",
                },
                "loc": Object {
                  "end": Object {
                    "column": 15,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 13,
                    "line": 1,
                  },
                },
                "operator": "PLUS_PLUS",
                "prefix": false,
                "type": "UPDATE_EXPRESSION",
              },
              "loc": Object {
                "end": Object {
                  "column": 20,
                  "line": 1,
                },
                "start": Object {
                  "column": 13,
                  "line": 1,
                },
              },
              "operator": "MULTIPLY",
              "right": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 20,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 19,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 10,
              },
              "type": "BINARY_EXPRESSION",
            },
            "type": "BINARY_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 20,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 20,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse multi-elements array 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 14,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": ArrayExpression {
            "elements": Array [
              NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 10,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 10,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 1,
              },
              NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 13,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 13,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 2,
              },
            ],
            "loc": Object {
              "end": Object {
                "column": 14,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "type": "ARRAY_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 14,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 14,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse nested object 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 49,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": ObjectExpression {
            "loc": Object {
              "end": Object {
                "column": 49,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "properties": Array [
              Property {
                "key": Identifier {
                  "loc": Object {
                    "end": Object {
                      "column": 14,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 10,
                      "line": 1,
                    },
                  },
                  "name": "outer",
                },
                "loc": Object {
                  "end": Object {
                    "column": 37,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 10,
                    "line": 1,
                  },
                },
                "type": "PROPERTY",
                "value": ObjectExpression {
                  "loc": Object {
                    "end": Object {
                      "column": 37,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 17,
                      "line": 1,
                    },
                  },
                  "properties": Array [
                    Property {
                      "key": Identifier {
                        "loc": Object {
                          "end": Object {
                            "column": 22,
                            "line": 1,
                          },
                          "start": Object {
                            "column": 18,
                            "line": 1,
                          },
                        },
                        "name": "inner",
                      },
                      "loc": Object {
                        "end": Object {
                          "column": 36,
                          "line": 1,
                        },
                        "start": Object {
                          "column": 18,
                          "line": 1,
                        },
                      },
                      "type": "PROPERTY",
                      "value": FunctionExpression {
                        "body": BlockStatement {
                          "body": StatementList {
                            "loc": Object {
                              "end": null,
                              "start": null,
                            },
                            "statements": Array [],
                            "type": "STATEMENT_LIST",
                          },
                          "loc": Object {
                            "end": Object {
                              "column": 36,
                              "line": 1,
                            },
                            "start": Object {
                              "column": 35,
                              "line": 1,
                            },
                          },
                          "type": "BLOCK_STATEMENT",
                        },
                        "loc": Object {
                          "end": Object {
                            "column": 36,
                            "line": 1,
                          },
                          "start": Object {
                            "column": 25,
                            "line": 1,
                          },
                        },
                        "params": Array [],
                        "type": "FUNCTION_EXPRESSION",
                      },
                    },
                  ],
                  "type": "OBJECT_EXPRESSION",
                },
              },
              Property {
                "key": Identifier {
                  "loc": Object {
                    "end": Object {
                      "column": 45,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 40,
                      "line": 1,
                    },
                  },
                  "name": "outer2",
                },
                "loc": Object {
                  "end": Object {
                    "column": 48,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 40,
                    "line": 1,
                  },
                },
                "type": "PROPERTY",
                "value": Identifier {
                  "loc": Object {
                    "end": Object {
                      "column": 48,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 48,
                      "line": 1,
                    },
                  },
                  "name": "b",
                },
              },
            ],
            "type": "OBJECT_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 49,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 49,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse number add 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 15,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": BinaryExpression {
            "left": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 10,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 10,
            },
            "loc": Object {
              "end": Object {
                "column": 15,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "operator": "PLUS",
            "right": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 15,
                  "line": 1,
                },
                "start": Object {
                  "column": 14,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 10,
            },
            "type": "BINARY_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 15,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 15,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse number add and multiplication 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 22,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": BinaryExpression {
            "left": BinaryExpression {
              "left": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 9,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 9,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 1,
              },
              "loc": Object {
                "end": Object {
                  "column": 17,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "operator": "PLUS",
              "right": BinaryExpression {
                "left": NumberLiteral {
                  "loc": Object {
                    "end": Object {
                      "column": 13,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 13,
                      "line": 1,
                    },
                  },
                  "type": "NUMBER_LITERAL",
                  "value": 2,
                },
                "loc": Object {
                  "end": Object {
                    "column": 17,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 13,
                    "line": 1,
                  },
                },
                "operator": "MULTIPLY",
                "right": NumberLiteral {
                  "loc": Object {
                    "end": Object {
                      "column": 17,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 17,
                      "line": 1,
                    },
                  },
                  "type": "NUMBER_LITERAL",
                  "value": 3,
                },
                "type": "BINARY_EXPRESSION",
              },
              "type": "BINARY_EXPRESSION",
            },
            "loc": Object {
              "end": Object {
                "column": 22,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "operator": "PLUS",
            "right": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 22,
                  "line": 1,
                },
                "start": Object {
                  "column": 21,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 10,
            },
            "type": "BINARY_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 22,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 22,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse number literal expression 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 10,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": NumberLiteral {
            "loc": Object {
              "end": Object {
                "column": 10,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "type": "NUMBER_LITERAL",
            "value": 10,
          },
          "loc": Object {
            "end": Object {
              "column": 10,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 10,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse number multi-add 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 20,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": BinaryExpression {
            "left": BinaryExpression {
              "left": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 10,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 9,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 10,
              },
              "loc": Object {
                "end": Object {
                  "column": 15,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "operator": "PLUS",
              "right": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 15,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 14,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 10,
              },
              "type": "BINARY_EXPRESSION",
            },
            "loc": Object {
              "end": Object {
                "column": 20,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "operator": "PLUS",
            "right": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 20,
                  "line": 1,
                },
                "start": Object {
                  "column": 19,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 10,
            },
            "type": "BINARY_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 20,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 20,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse parenthesis as higher priority 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 23,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": BinaryExpression {
            "left": BinaryExpression {
              "left": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 9,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 9,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 1,
              },
              "loc": Object {
                "end": Object {
                  "column": 18,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "operator": "PLUS",
              "right": BinaryExpression {
                "left": NumberLiteral {
                  "loc": Object {
                    "end": Object {
                      "column": 14,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 14,
                      "line": 1,
                    },
                  },
                  "type": "NUMBER_LITERAL",
                  "value": 2,
                },
                "loc": Object {
                  "end": Object {
                    "column": 18,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 14,
                    "line": 1,
                  },
                },
                "operator": "PLUS",
                "right": NumberLiteral {
                  "loc": Object {
                    "end": Object {
                      "column": 18,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 18,
                      "line": 1,
                    },
                  },
                  "type": "NUMBER_LITERAL",
                  "value": 2,
                },
                "type": "BINARY_EXPRESSION",
              },
              "type": "BINARY_EXPRESSION",
            },
            "loc": Object {
              "end": Object {
                "column": 23,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "operator": "PLUS",
            "right": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 23,
                  "line": 1,
                },
                "start": Object {
                  "column": 23,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 3,
            },
            "type": "BINARY_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 23,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 23,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse parenthesis as higher priority and multiplication and add 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 26,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": BinaryExpression {
            "left": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 9,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 1,
            },
            "loc": Object {
              "end": Object {
                "column": 26,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "operator": "PLUS",
            "right": BinaryExpression {
              "left": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 13,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 13,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 2,
              },
              "loc": Object {
                "end": Object {
                  "column": 26,
                  "line": 1,
                },
                "start": Object {
                  "column": 13,
                  "line": 1,
                },
              },
              "operator": "MULTIPLY",
              "right": BinaryExpression {
                "left": BinaryExpression {
                  "left": NumberLiteral {
                    "loc": Object {
                      "end": Object {
                        "column": 18,
                        "line": 1,
                      },
                      "start": Object {
                        "column": 18,
                        "line": 1,
                      },
                    },
                    "type": "NUMBER_LITERAL",
                    "value": 4,
                  },
                  "loc": Object {
                    "end": Object {
                      "column": 22,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 18,
                      "line": 1,
                    },
                  },
                  "operator": "PLUS",
                  "right": NumberLiteral {
                    "loc": Object {
                      "end": Object {
                        "column": 22,
                        "line": 1,
                      },
                      "start": Object {
                        "column": 22,
                        "line": 1,
                      },
                    },
                    "type": "NUMBER_LITERAL",
                    "value": 5,
                  },
                  "type": "BINARY_EXPRESSION",
                },
                "loc": Object {
                  "end": Object {
                    "column": 26,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 18,
                    "line": 1,
                  },
                },
                "operator": "MINUS",
                "right": NumberLiteral {
                  "loc": Object {
                    "end": Object {
                      "column": 26,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 26,
                      "line": 1,
                    },
                  },
                  "type": "NUMBER_LITERAL",
                  "value": 1,
                },
                "type": "BINARY_EXPRESSION",
              },
              "type": "BINARY_EXPRESSION",
            },
            "type": "BINARY_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 26,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 26,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse plus and logic operator together 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 21,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": BinaryExpression {
            "left": BinaryExpression {
              "left": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 9,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 9,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 1,
              },
              "loc": Object {
                "end": Object {
                  "column": 13,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "operator": "PLUS",
              "right": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 13,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 13,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 1,
              },
              "type": "BINARY_EXPRESSION",
            },
            "loc": Object {
              "end": Object {
                "column": 21,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "operator": "GREATER_THAN",
            "right": BinaryExpression {
              "left": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 17,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 17,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 2,
              },
              "loc": Object {
                "end": Object {
                  "column": 21,
                  "line": 1,
                },
                "start": Object {
                  "column": 17,
                  "line": 1,
                },
              },
              "operator": "PLUS",
              "right": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 21,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 21,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 3,
              },
              "type": "BINARY_EXPRESSION",
            },
            "type": "BINARY_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 21,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 21,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse postfix update expression statement 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 3,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    ExpressionStatement {
      "expression": UpdateExpression {
        "argument": Identifier {
          "loc": Object {
            "end": Object {
              "column": 1,
              "line": 1,
            },
            "start": Object {
              "column": 1,
              "line": 1,
            },
          },
          "name": "a",
        },
        "loc": Object {
          "end": Object {
            "column": 3,
            "line": 1,
          },
          "start": Object {
            "column": 1,
            "line": 1,
          },
        },
        "operator": "PLUS_PLUS",
        "prefix": false,
        "type": "UPDATE_EXPRESSION",
      },
      "loc": Object {
        "end": Object {
          "column": 3,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "EXPRESSION_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse prefix update expression statement 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 3,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    ExpressionStatement {
      "expression": UpdateExpression {
        "argument": Identifier {
          "loc": Object {
            "end": Object {
              "column": 3,
              "line": 1,
            },
            "start": Object {
              "column": 3,
              "line": 1,
            },
          },
          "name": "a",
        },
        "loc": Object {
          "end": Object {
            "column": 3,
            "line": 1,
          },
          "start": Object {
            "column": 1,
            "line": 1,
          },
        },
        "operator": "PLUS_PLUS",
        "prefix": true,
        "type": "UPDATE_EXPRESSION",
      },
      "loc": Object {
        "end": Object {
          "column": 3,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "EXPRESSION_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse real program 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 5,
      "line": 14,
    },
    "start": Object {
      "column": 5,
      "line": 2,
    },
  },
  "statements": Array [
    FunctionDeclaration {
      "body": BlockStatement {
        "body": StatementList {
          "loc": Object {
            "end": Object {
              "column": 7,
              "line": 8,
            },
            "start": Object {
              "column": 7,
              "line": 3,
            },
          },
          "statements": Array [
            VariableStatement {
              "declarations": Array [
                VariableDeclarator {
                  "id": "sum",
                  "init": NumberLiteral {
                    "loc": Object {
                      "end": Object {
                        "column": 17,
                        "line": 3,
                      },
                      "start": Object {
                        "column": 17,
                        "line": 3,
                      },
                    },
                    "type": "NUMBER_LITERAL",
                    "value": 1,
                  },
                  "loc": Object {
                    "end": Object {
                      "column": 17,
                      "line": 3,
                    },
                    "start": Object {
                      "column": 11,
                      "line": 3,
                    },
                  },
                  "type": "VARIABLE_DECLARATOR",
                },
              ],
              "kind": "LET",
              "loc": Object {
                "end": Object {
                  "column": 17,
                  "line": 3,
                },
                "start": Object {
                  "column": 7,
                  "line": 3,
                },
              },
              "type": "VARIABLE_STATEMENT",
            },
            ReturnStatement {
              "argument": FunctionExpression {
                "body": BlockStatement {
                  "body": StatementList {
                    "loc": Object {
                      "end": Object {
                        "column": 18,
                        "line": 7,
                      },
                      "start": Object {
                        "column": 9,
                        "line": 6,
                      },
                    },
                    "statements": Array [
                      AssignmentExpression {
                        "left": Identifier {
                          "loc": Object {
                            "end": Object {
                              "column": 11,
                              "line": 6,
                            },
                            "start": Object {
                              "column": 9,
                              "line": 6,
                            },
                          },
                          "name": "sum",
                        },
                        "loc": Object {
                          "end": Object {
                            "column": 21,
                            "line": 6,
                          },
                          "start": Object {
                            "column": 9,
                            "line": 6,
                          },
                        },
                        "right": BinaryExpression {
                          "left": Identifier {
                            "loc": Object {
                              "end": Object {
                                "column": 17,
                                "line": 6,
                              },
                              "start": Object {
                                "column": 15,
                                "line": 6,
                              },
                            },
                            "name": "sum",
                          },
                          "loc": Object {
                            "end": Object {
                              "column": 21,
                              "line": 6,
                            },
                            "start": Object {
                              "column": 15,
                              "line": 6,
                            },
                          },
                          "operator": "PLUS",
                          "right": Identifier {
                            "loc": Object {
                              "end": Object {
                                "column": 21,
                                "line": 6,
                              },
                              "start": Object {
                                "column": 21,
                                "line": 6,
                              },
                            },
                            "name": "i",
                          },
                          "type": "BINARY_EXPRESSION",
                        },
                        "type": "ASSIGNMENT_EXPRESSION",
                      },
                      ReturnStatement {
                        "argument": Identifier {
                          "loc": Object {
                            "end": Object {
                              "column": 18,
                              "line": 7,
                            },
                            "start": Object {
                              "column": 16,
                              "line": 7,
                            },
                          },
                          "name": "sum",
                        },
                        "loc": Object {
                          "end": Object {
                            "column": 18,
                            "line": 7,
                          },
                          "start": Object {
                            "column": 9,
                            "line": 7,
                          },
                        },
                        "type": "RETURN_STATEMENT",
                      },
                    ],
                    "type": "STATEMENT_LIST",
                  },
                  "loc": Object {
                    "end": Object {
                      "column": 7,
                      "line": 8,
                    },
                    "start": Object {
                      "column": 26,
                      "line": 5,
                    },
                  },
                  "type": "BLOCK_STATEMENT",
                },
                "loc": Object {
                  "end": Object {
                    "column": 7,
                    "line": 8,
                  },
                  "start": Object {
                    "column": 14,
                    "line": 5,
                  },
                },
                "params": Array [
                  Identifier {
                    "loc": Object {
                      "end": Object {
                        "column": 23,
                        "line": 5,
                      },
                      "start": Object {
                        "column": 23,
                        "line": 5,
                      },
                    },
                    "name": "i",
                  },
                ],
                "type": "FUNCTION_EXPRESSION",
              },
              "loc": Object {
                "end": Object {
                  "column": 7,
                  "line": 8,
                },
                "start": Object {
                  "column": 7,
                  "line": 5,
                },
              },
              "type": "RETURN_STATEMENT",
            },
          ],
          "type": "STATEMENT_LIST",
        },
        "loc": Object {
          "end": Object {
            "column": 5,
            "line": 9,
          },
          "start": Object {
            "column": 29,
            "line": 2,
          },
        },
        "type": "BLOCK_STATEMENT",
      },
      "id": Identifier {
        "loc": Object {
          "end": Object {
            "column": 25,
            "line": 2,
          },
          "start": Object {
            "column": 14,
            "line": 2,
          },
        },
        "name": "sumGenerator",
      },
      "loc": Object {
        "end": Object {
          "column": 5,
          "line": 9,
        },
        "start": Object {
          "column": 5,
          "line": 2,
        },
      },
      "params": Array [],
    },
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "sum",
          "init": CallExpression {
            "arguments": Array [],
            "callee": Identifier {
              "loc": Object {
                "end": Object {
                  "column": 26,
                  "line": 11,
                },
                "start": Object {
                  "column": 15,
                  "line": 11,
                },
              },
              "name": "sumGenerator",
            },
            "loc": Object {
              "end": Object {
                "column": 28,
                "line": 11,
              },
              "start": Object {
                "column": 15,
                "line": 11,
              },
            },
            "type": "CALL_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 28,
              "line": 11,
            },
            "start": Object {
              "column": 9,
              "line": 11,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 28,
          "line": 11,
        },
        "start": Object {
          "column": 5,
          "line": 11,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
    ForStatement {
      "body": BlockStatement {
        "body": StatementList {
          "loc": Object {
            "end": Object {
              "column": 25,
              "line": 13,
            },
            "start": Object {
              "column": 7,
              "line": 13,
            },
          },
          "statements": Array [
            ExpressionStatement {
              "expression": CallExpression {
                "arguments": Array [
                  CallExpression {
                    "arguments": Array [
                      Identifier {
                        "loc": Object {
                          "end": Object {
                            "column": 23,
                            "line": 13,
                          },
                          "start": Object {
                            "column": 23,
                            "line": 13,
                          },
                        },
                        "name": "i",
                      },
                    ],
                    "callee": Identifier {
                      "loc": Object {
                        "end": Object {
                          "column": 21,
                          "line": 13,
                        },
                        "start": Object {
                          "column": 19,
                          "line": 13,
                        },
                      },
                      "name": "sum",
                    },
                    "loc": Object {
                      "end": Object {
                        "column": 24,
                        "line": 13,
                      },
                      "start": Object {
                        "column": 19,
                        "line": 13,
                      },
                    },
                    "type": "CALL_EXPRESSION",
                  },
                ],
                "callee": MemberExpression {
                  "loc": Object {
                    "end": Object {
                      "column": 17,
                      "line": 13,
                    },
                    "start": Object {
                      "column": 7,
                      "line": 13,
                    },
                  },
                  "object": Identifier {
                    "loc": Object {
                      "end": Object {
                        "column": 13,
                        "line": 13,
                      },
                      "start": Object {
                        "column": 7,
                        "line": 13,
                      },
                    },
                    "name": "console",
                  },
                  "property": Identifier {
                    "loc": Object {
                      "end": Object {
                        "column": 17,
                        "line": 13,
                      },
                      "start": Object {
                        "column": 15,
                        "line": 13,
                      },
                    },
                    "name": "log",
                  },
                },
                "loc": Object {
                  "end": Object {
                    "column": 25,
                    "line": 13,
                  },
                  "start": Object {
                    "column": 7,
                    "line": 13,
                  },
                },
                "type": "CALL_EXPRESSION",
              },
              "loc": Object {
                "end": Object {
                  "column": 25,
                  "line": 13,
                },
                "start": Object {
                  "column": 7,
                  "line": 13,
                },
              },
              "type": "EXPRESSION_STATEMENT",
            },
          ],
          "type": "STATEMENT_LIST",
        },
        "loc": Object {
          "end": Object {
            "column": 5,
            "line": 14,
          },
          "start": Object {
            "column": 34,
            "line": 12,
          },
        },
        "type": "BLOCK_STATEMENT",
      },
      "init": VariableStatement {
        "declarations": Array [
          VariableDeclarator {
            "id": "i",
            "init": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 18,
                  "line": 12,
                },
                "start": Object {
                  "column": 18,
                  "line": 12,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 0,
            },
            "loc": Object {
              "end": Object {
                "column": 18,
                "line": 12,
              },
              "start": Object {
                "column": 14,
                "line": 12,
              },
            },
            "type": "VARIABLE_DECLARATOR",
          },
        ],
        "kind": "LET",
        "loc": Object {
          "end": Object {
            "column": 18,
            "line": 12,
          },
          "start": Object {
            "column": 10,
            "line": 12,
          },
        },
        "type": "VARIABLE_STATEMENT",
      },
      "loc": Object {
        "end": Object {
          "column": 5,
          "line": 14,
        },
        "start": Object {
          "column": 5,
          "line": 12,
        },
      },
      "test": BinaryExpression {
        "left": Identifier {
          "loc": Object {
            "end": Object {
              "column": 21,
              "line": 12,
            },
            "start": Object {
              "column": 21,
              "line": 12,
            },
          },
          "name": "i",
        },
        "loc": Object {
          "end": Object {
            "column": 26,
            "line": 12,
          },
          "start": Object {
            "column": 21,
            "line": 12,
          },
        },
        "operator": "LESS_THAN",
        "right": NumberLiteral {
          "loc": Object {
            "end": Object {
              "column": 26,
              "line": 12,
            },
            "start": Object {
              "column": 25,
              "line": 12,
            },
          },
          "type": "NUMBER_LITERAL",
          "value": 10,
        },
        "type": "BINARY_EXPRESSION",
      },
      "type": "FOR_STATEMENT",
      "update": ExpressionStatement {
        "expression": UpdateExpression {
          "argument": Identifier {
            "loc": Object {
              "end": Object {
                "column": 29,
                "line": 12,
              },
              "start": Object {
                "column": 29,
                "line": 12,
              },
            },
            "name": "i",
          },
          "loc": Object {
            "end": Object {
              "column": 31,
              "line": 12,
            },
            "start": Object {
              "column": 29,
              "line": 12,
            },
          },
          "operator": "PLUS_PLUS",
          "prefix": false,
          "type": "UPDATE_EXPRESSION",
        },
        "loc": Object {
          "end": Object {
            "column": 31,
            "line": 12,
          },
          "start": Object {
            "column": 29,
            "line": 12,
          },
        },
        "type": "EXPRESSION_STATEMENT",
      },
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse return statement 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 5,
      "line": 4,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    FunctionDeclaration {
      "body": BlockStatement {
        "body": StatementList {
          "loc": Object {
            "end": Object {
              "column": 14,
              "line": 3,
            },
            "start": Object {
              "column": 7,
              "line": 2,
            },
          },
          "statements": Array [
            VariableStatement {
              "declarations": Array [
                VariableDeclarator {
                  "id": "a",
                  "init": BinaryExpression {
                    "left": NumberLiteral {
                      "loc": Object {
                        "end": Object {
                          "column": 15,
                          "line": 2,
                        },
                        "start": Object {
                          "column": 15,
                          "line": 2,
                        },
                      },
                      "type": "NUMBER_LITERAL",
                      "value": 1,
                    },
                    "loc": Object {
                      "end": Object {
                        "column": 19,
                        "line": 2,
                      },
                      "start": Object {
                        "column": 15,
                        "line": 2,
                      },
                    },
                    "operator": "PLUS",
                    "right": NumberLiteral {
                      "loc": Object {
                        "end": Object {
                          "column": 19,
                          "line": 2,
                        },
                        "start": Object {
                          "column": 19,
                          "line": 2,
                        },
                      },
                      "type": "NUMBER_LITERAL",
                      "value": 1,
                    },
                    "type": "BINARY_EXPRESSION",
                  },
                  "loc": Object {
                    "end": Object {
                      "column": 19,
                      "line": 2,
                    },
                    "start": Object {
                      "column": 11,
                      "line": 2,
                    },
                  },
                  "type": "VARIABLE_DECLARATOR",
                },
              ],
              "kind": "LET",
              "loc": Object {
                "end": Object {
                  "column": 19,
                  "line": 2,
                },
                "start": Object {
                  "column": 7,
                  "line": 2,
                },
              },
              "type": "VARIABLE_STATEMENT",
            },
            ReturnStatement {
              "argument": Identifier {
                "loc": Object {
                  "end": Object {
                    "column": 14,
                    "line": 3,
                  },
                  "start": Object {
                    "column": 14,
                    "line": 3,
                  },
                },
                "name": "a",
              },
              "loc": Object {
                "end": Object {
                  "column": 14,
                  "line": 3,
                },
                "start": Object {
                  "column": 7,
                  "line": 3,
                },
              },
              "type": "RETURN_STATEMENT",
            },
          ],
          "type": "STATEMENT_LIST",
        },
        "loc": Object {
          "end": Object {
            "column": 5,
            "line": 4,
          },
          "start": Object {
            "column": 16,
            "line": 1,
          },
        },
        "type": "BLOCK_STATEMENT",
      },
      "id": Identifier {
        "loc": Object {
          "end": Object {
            "column": 12,
            "line": 1,
          },
          "start": Object {
            "column": 10,
            "line": 1,
          },
        },
        "name": "sum",
      },
      "loc": Object {
        "end": Object {
          "column": 5,
          "line": 4,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "params": Array [],
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse single element array 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 11,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": ArrayExpression {
            "elements": Array [
              NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 10,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 10,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 1,
              },
            ],
            "loc": Object {
              "end": Object {
                "column": 11,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "type": "ARRAY_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 11,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 11,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse single property element 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 14,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": ObjectExpression {
            "loc": Object {
              "end": Object {
                "column": 14,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "properties": Array [
              Property {
                "key": Identifier {
                  "loc": Object {
                    "end": Object {
                      "column": 10,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 10,
                      "line": 1,
                    },
                  },
                  "name": "a",
                },
                "loc": Object {
                  "end": Object {
                    "column": 13,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 10,
                    "line": 1,
                  },
                },
                "type": "PROPERTY",
                "value": NumberLiteral {
                  "loc": Object {
                    "end": Object {
                      "column": 13,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 13,
                      "line": 1,
                    },
                  },
                  "type": "NUMBER_LITERAL",
                  "value": 1,
                },
              },
            ],
            "type": "OBJECT_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 14,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 14,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse string expression 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 21,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": StringLiteral {
            "loc": Object {
              "end": Object {
                "column": 21,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "type": "STRING_LITERAL",
            "value": "hello world'",
          },
          "loc": Object {
            "end": Object {
              "column": 21,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 21,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse while statement 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 5,
      "line": 3,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    WhileStatement {
      "body": BlockStatement {
        "body": StatementList {
          "loc": Object {
            "end": null,
            "start": null,
          },
          "statements": Array [],
          "type": "STATEMENT_LIST",
        },
        "loc": Object {
          "end": Object {
            "column": 5,
            "line": 3,
          },
          "start": Object {
            "column": 11,
            "line": 1,
          },
        },
        "type": "BLOCK_STATEMENT",
      },
      "loc": Object {
        "end": Object {
          "column": 5,
          "line": 3,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "test": BinaryExpression {
        "left": NumberLiteral {
          "loc": Object {
            "end": Object {
              "column": 7,
              "line": 1,
            },
            "start": Object {
              "column": 7,
              "line": 1,
            },
          },
          "type": "NUMBER_LITERAL",
          "value": 1,
        },
        "loc": Object {
          "end": Object {
            "column": 9,
            "line": 1,
          },
          "start": Object {
            "column": 7,
            "line": 1,
          },
        },
        "operator": "PLUS",
        "right": NumberLiteral {
          "loc": Object {
            "end": Object {
              "column": 9,
              "line": 1,
            },
            "start": Object {
              "column": 9,
              "line": 1,
            },
          },
          "type": "NUMBER_LITERAL",
          "value": 1,
        },
        "type": "BINARY_EXPRESSION",
      },
      "type": "WHILE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;
