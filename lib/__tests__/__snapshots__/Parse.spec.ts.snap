// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parse it should parse bracket member expression 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 12,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": MemberExpression {
            "loc": Object {
              "end": Object {
                "column": 12,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "object": Identifier {
              "loc": Object {
                "end": Object {
                  "column": 9,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "name": "b",
            },
            "property": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 12,
                  "line": 1,
                },
                "start": Object {
                  "column": 11,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 10,
            },
          },
          "loc": Object {
            "end": Object {
              "column": 12,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 12,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse dot member expression 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 11,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": MemberExpression {
            "loc": Object {
              "end": Object {
                "column": 11,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "object": Identifier {
              "loc": Object {
                "end": Object {
                  "column": 9,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "name": "b",
            },
            "property": Identifier {
              "loc": Object {
                "end": Object {
                  "column": 11,
                  "line": 1,
                },
                "start": Object {
                  "column": 11,
                  "line": 1,
                },
              },
              "name": "a",
            },
          },
          "loc": Object {
            "end": Object {
              "column": 11,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 11,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse empty params function 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 16,
      "line": 2,
    },
    "start": Object {
      "column": 7,
      "line": 2,
    },
  },
  "statements": Array [
    FunctionDeclaration {
      "body": BlockStatement {
        "body": Array [
          VariableStatement {
            "declarations": Array [
              VariableDeclarator {
                "id": "a",
                "init": NumberLiteral {
                  "loc": Object {
                    "end": Object {
                      "column": 16,
                      "line": 2,
                    },
                    "start": Object {
                      "column": 15,
                      "line": 2,
                    },
                  },
                  "type": "NUMBER_LITERAL",
                  "value": 10,
                },
                "loc": Object {
                  "end": Object {
                    "column": 16,
                    "line": 2,
                  },
                  "start": Object {
                    "column": 11,
                    "line": 2,
                  },
                },
                "type": "VARIABLE_DECLARATOR",
              },
            ],
            "kind": "LET",
            "loc": Object {
              "end": Object {
                "column": 16,
                "line": 2,
              },
              "start": Object {
                "column": 7,
                "line": 2,
              },
            },
            "type": "VARIABLE_STATEMENT",
          },
        ],
        "loc": Object {
          "end": Object {
            "column": 16,
            "line": 2,
          },
          "start": Object {
            "column": 7,
            "line": 2,
          },
        },
        "type": "BLOCK_STATEMENT",
      },
      "loc": Object {
        "end": Object {
          "column": 16,
          "line": 2,
        },
        "start": Object {
          "column": 7,
          "line": 2,
        },
      },
      "params": Array [],
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse equal 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 22,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": BinaryExpression {
            "left": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 9,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 1,
            },
            "loc": Object {
              "end": Object {
                "column": 22,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "operator": "EQUAL",
            "right": BinaryExpression {
              "left": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 14,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 14,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 1,
              },
              "loc": Object {
                "end": Object {
                  "column": 22,
                  "line": 1,
                },
                "start": Object {
                  "column": 14,
                  "line": 1,
                },
              },
              "operator": "PLUS",
              "right": BinaryExpression {
                "left": NumberLiteral {
                  "loc": Object {
                    "end": Object {
                      "column": 18,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 18,
                      "line": 1,
                    },
                  },
                  "type": "NUMBER_LITERAL",
                  "value": 2,
                },
                "loc": Object {
                  "end": Object {
                    "column": 22,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 18,
                    "line": 1,
                  },
                },
                "operator": "MULTIPLY",
                "right": NumberLiteral {
                  "loc": Object {
                    "end": Object {
                      "column": 22,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 22,
                      "line": 1,
                    },
                  },
                  "type": "NUMBER_LITERAL",
                  "value": 3,
                },
                "type": "BINARY_EXPRESSION",
              },
              "type": "BINARY_EXPRESSION",
            },
            "type": "BINARY_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 22,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 22,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse expression in if statement 1`] = `
StatementList {
  "loc": Object {
    "end": null,
    "start": Object {
      "column": 4,
      "line": 1,
    },
  },
  "statements": Array [
    IfStatement {
      "consequent": BlockStatement {
        "body": Array [],
        "loc": Object {
          "end": null,
          "start": null,
        },
        "type": "BLOCK_STATEMENT",
      },
      "loc": Object {
        "end": null,
        "start": Object {
          "column": 4,
          "line": 1,
        },
      },
      "test": BinaryExpression {
        "left": Identifier {
          "loc": Object {
            "end": Object {
              "column": 4,
              "line": 1,
            },
            "start": Object {
              "column": 4,
              "line": 1,
            },
          },
          "name": "a",
        },
        "loc": Object {
          "end": Object {
            "column": 19,
            "line": 1,
          },
          "start": Object {
            "column": 4,
            "line": 1,
          },
        },
        "operator": "EQUAL",
        "right": BinaryExpression {
          "left": Identifier {
            "loc": Object {
              "end": Object {
                "column": 9,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "name": "b",
          },
          "loc": Object {
            "end": Object {
              "column": 19,
              "line": 1,
            },
            "start": Object {
              "column": 9,
              "line": 1,
            },
          },
          "operator": "PLUS",
          "right": BinaryExpression {
            "left": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 14,
                  "line": 1,
                },
                "start": Object {
                  "column": 13,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 10,
            },
            "loc": Object {
              "end": Object {
                "column": 19,
                "line": 1,
              },
              "start": Object {
                "column": 13,
                "line": 1,
              },
            },
            "operator": "MULTIPLY",
            "right": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 19,
                  "line": 1,
                },
                "start": Object {
                  "column": 18,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 20,
            },
            "type": "BINARY_EXPRESSION",
          },
          "type": "BINARY_EXPRESSION",
        },
        "type": "BINARY_EXPRESSION",
      },
      "type": "BOOLEAN_LITERAL",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse function 1`] = `
StatementList {
  "loc": Object {
    "end": null,
    "start": Object {
      "column": 10,
      "line": 1,
    },
  },
  "statements": Array [
    FunctionDeclaration {
      "body": BlockStatement {
        "body": Array [],
        "loc": Object {
          "end": null,
          "start": null,
        },
        "type": "BLOCK_STATEMENT",
      },
      "loc": Object {
        "end": null,
        "start": Object {
          "column": 10,
          "line": 1,
        },
      },
      "params": Array [
        Identifier {
          "loc": Object {
            "end": Object {
              "column": 10,
              "line": 1,
            },
            "start": Object {
              "column": 10,
              "line": 1,
            },
          },
          "name": "a",
        },
        Identifier {
          "loc": Object {
            "end": Object {
              "column": 13,
              "line": 1,
            },
            "start": Object {
              "column": 13,
              "line": 1,
            },
          },
          "name": "b",
        },
        Identifier {
          "loc": Object {
            "end": Object {
              "column": 16,
              "line": 1,
            },
            "start": Object {
              "column": 16,
              "line": 1,
            },
          },
          "name": "c",
        },
      ],
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse identifier 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 9,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": Identifier {
            "loc": Object {
              "end": Object {
                "column": 9,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "name": "b",
          },
          "loc": Object {
            "end": Object {
              "column": 9,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 9,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse if statement 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 16,
      "line": 2,
    },
    "start": Object {
      "column": 4,
      "line": 1,
    },
  },
  "statements": Array [
    IfStatement {
      "consequent": BlockStatement {
        "body": Array [
          VariableStatement {
            "declarations": Array [
              VariableDeclarator {
                "id": "c",
                "init": NumberLiteral {
                  "loc": Object {
                    "end": Object {
                      "column": 16,
                      "line": 2,
                    },
                    "start": Object {
                      "column": 15,
                      "line": 2,
                    },
                  },
                  "type": "NUMBER_LITERAL",
                  "value": 10,
                },
                "loc": Object {
                  "end": Object {
                    "column": 16,
                    "line": 2,
                  },
                  "start": Object {
                    "column": 11,
                    "line": 2,
                  },
                },
                "type": "VARIABLE_DECLARATOR",
              },
            ],
            "kind": "LET",
            "loc": Object {
              "end": Object {
                "column": 16,
                "line": 2,
              },
              "start": Object {
                "column": 7,
                "line": 2,
              },
            },
            "type": "VARIABLE_STATEMENT",
          },
        ],
        "loc": Object {
          "end": Object {
            "column": 16,
            "line": 2,
          },
          "start": Object {
            "column": 7,
            "line": 2,
          },
        },
        "type": "BLOCK_STATEMENT",
      },
      "loc": Object {
        "end": Object {
          "column": 16,
          "line": 2,
        },
        "start": Object {
          "column": 4,
          "line": 1,
        },
      },
      "test": BooleanLiteral {
        "loc": Object {
          "end": Object {
            "column": 7,
            "line": 1,
          },
          "start": Object {
            "column": 4,
            "line": 1,
          },
        },
        "type": "BOOLEAN_LITERAL",
        "value": true,
      },
      "type": "BOOLEAN_LITERAL",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse mixed bracket and dot member expression 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 14,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": MemberExpression {
            "loc": Object {
              "end": Object {
                "column": 14,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "object": MemberExpression {
              "loc": Object {
                "end": Object {
                  "column": 14,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "object": MemberExpression {
                "loc": Object {
                  "end": Object {
                    "column": 14,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 9,
                    "line": 1,
                  },
                },
                "object": MemberExpression {
                  "loc": Object {
                    "end": Object {
                      "column": 14,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 9,
                      "line": 1,
                    },
                  },
                  "object": Identifier {
                    "loc": Object {
                      "end": Object {
                        "column": 11,
                        "line": 1,
                      },
                      "start": Object {
                        "column": 9,
                        "line": 1,
                      },
                    },
                    "name": "arr",
                  },
                  "property": NumberLiteral {
                    "loc": Object {
                      "end": Object {
                        "column": 14,
                        "line": 1,
                      },
                      "start": Object {
                        "column": 13,
                        "line": 1,
                      },
                    },
                    "type": "NUMBER_LITERAL",
                    "value": 10,
                  },
                },
                "property": Identifier {
                  "loc": Object {
                    "end": Object {
                      "column": 17,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 17,
                      "line": 1,
                    },
                  },
                  "name": "a",
                },
              },
              "property": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 20,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 19,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 11,
              },
            },
            "property": Identifier {
              "loc": Object {
                "end": Object {
                  "column": 23,
                  "line": 1,
                },
                "start": Object {
                  "column": 23,
                  "line": 1,
                },
              },
              "name": "c",
            },
          },
          "loc": Object {
            "end": Object {
              "column": 14,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 14,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse number add 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 15,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": BinaryExpression {
            "left": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 10,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 10,
            },
            "loc": Object {
              "end": Object {
                "column": 15,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "operator": "PLUS",
            "right": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 15,
                  "line": 1,
                },
                "start": Object {
                  "column": 14,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 10,
            },
            "type": "BINARY_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 15,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 15,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse number add and multiplication 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 22,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": BinaryExpression {
            "left": BinaryExpression {
              "left": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 9,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 9,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 1,
              },
              "loc": Object {
                "end": Object {
                  "column": 17,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "operator": "PLUS",
              "right": BinaryExpression {
                "left": NumberLiteral {
                  "loc": Object {
                    "end": Object {
                      "column": 13,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 13,
                      "line": 1,
                    },
                  },
                  "type": "NUMBER_LITERAL",
                  "value": 2,
                },
                "loc": Object {
                  "end": Object {
                    "column": 17,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 13,
                    "line": 1,
                  },
                },
                "operator": "MULTIPLY",
                "right": NumberLiteral {
                  "loc": Object {
                    "end": Object {
                      "column": 17,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 17,
                      "line": 1,
                    },
                  },
                  "type": "NUMBER_LITERAL",
                  "value": 3,
                },
                "type": "BINARY_EXPRESSION",
              },
              "type": "BINARY_EXPRESSION",
            },
            "loc": Object {
              "end": Object {
                "column": 22,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "operator": "PLUS",
            "right": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 22,
                  "line": 1,
                },
                "start": Object {
                  "column": 21,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 10,
            },
            "type": "BINARY_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 22,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 22,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse number literal expression 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 10,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": NumberLiteral {
            "loc": Object {
              "end": Object {
                "column": 10,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "type": "NUMBER_LITERAL",
            "value": 10,
          },
          "loc": Object {
            "end": Object {
              "column": 10,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 10,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse number multi-add 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 20,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": BinaryExpression {
            "left": BinaryExpression {
              "left": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 10,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 9,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 10,
              },
              "loc": Object {
                "end": Object {
                  "column": 15,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "operator": "PLUS",
              "right": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 15,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 14,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 10,
              },
              "type": "BINARY_EXPRESSION",
            },
            "loc": Object {
              "end": Object {
                "column": 20,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "operator": "PLUS",
            "right": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 20,
                  "line": 1,
                },
                "start": Object {
                  "column": 19,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 10,
            },
            "type": "BINARY_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 20,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 20,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse parenthesis as higher priority 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 23,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": BinaryExpression {
            "left": BinaryExpression {
              "left": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 9,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 9,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 1,
              },
              "loc": Object {
                "end": Object {
                  "column": 18,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "operator": "PLUS",
              "right": BinaryExpression {
                "left": NumberLiteral {
                  "loc": Object {
                    "end": Object {
                      "column": 14,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 14,
                      "line": 1,
                    },
                  },
                  "type": "NUMBER_LITERAL",
                  "value": 2,
                },
                "loc": Object {
                  "end": Object {
                    "column": 18,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 14,
                    "line": 1,
                  },
                },
                "operator": "PLUS",
                "right": NumberLiteral {
                  "loc": Object {
                    "end": Object {
                      "column": 18,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 18,
                      "line": 1,
                    },
                  },
                  "type": "NUMBER_LITERAL",
                  "value": 2,
                },
                "type": "BINARY_EXPRESSION",
              },
              "type": "BINARY_EXPRESSION",
            },
            "loc": Object {
              "end": Object {
                "column": 23,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "operator": "PLUS",
            "right": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 23,
                  "line": 1,
                },
                "start": Object {
                  "column": 23,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 3,
            },
            "type": "BINARY_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 23,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 23,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse parenthesis as higher priority and multiplication and add 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 26,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": BinaryExpression {
            "left": NumberLiteral {
              "loc": Object {
                "end": Object {
                  "column": 9,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "type": "NUMBER_LITERAL",
              "value": 1,
            },
            "loc": Object {
              "end": Object {
                "column": 26,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "operator": "PLUS",
            "right": BinaryExpression {
              "left": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 13,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 13,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 2,
              },
              "loc": Object {
                "end": Object {
                  "column": 26,
                  "line": 1,
                },
                "start": Object {
                  "column": 13,
                  "line": 1,
                },
              },
              "operator": "MULTIPLY",
              "right": BinaryExpression {
                "left": BinaryExpression {
                  "left": NumberLiteral {
                    "loc": Object {
                      "end": Object {
                        "column": 18,
                        "line": 1,
                      },
                      "start": Object {
                        "column": 18,
                        "line": 1,
                      },
                    },
                    "type": "NUMBER_LITERAL",
                    "value": 4,
                  },
                  "loc": Object {
                    "end": Object {
                      "column": 22,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 18,
                      "line": 1,
                    },
                  },
                  "operator": "PLUS",
                  "right": NumberLiteral {
                    "loc": Object {
                      "end": Object {
                        "column": 22,
                        "line": 1,
                      },
                      "start": Object {
                        "column": 22,
                        "line": 1,
                      },
                    },
                    "type": "NUMBER_LITERAL",
                    "value": 5,
                  },
                  "type": "BINARY_EXPRESSION",
                },
                "loc": Object {
                  "end": Object {
                    "column": 26,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 18,
                    "line": 1,
                  },
                },
                "operator": "MINUS",
                "right": NumberLiteral {
                  "loc": Object {
                    "end": Object {
                      "column": 26,
                      "line": 1,
                    },
                    "start": Object {
                      "column": 26,
                      "line": 1,
                    },
                  },
                  "type": "NUMBER_LITERAL",
                  "value": 1,
                },
                "type": "BINARY_EXPRESSION",
              },
              "type": "BINARY_EXPRESSION",
            },
            "type": "BINARY_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 26,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 26,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse plus and logic operator together 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 21,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": BinaryExpression {
            "left": BinaryExpression {
              "left": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 9,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 9,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 1,
              },
              "loc": Object {
                "end": Object {
                  "column": 13,
                  "line": 1,
                },
                "start": Object {
                  "column": 9,
                  "line": 1,
                },
              },
              "operator": "PLUS",
              "right": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 13,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 13,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 1,
              },
              "type": "BINARY_EXPRESSION",
            },
            "loc": Object {
              "end": Object {
                "column": 21,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "operator": "GREATER_THAN",
            "right": BinaryExpression {
              "left": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 17,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 17,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 2,
              },
              "loc": Object {
                "end": Object {
                  "column": 21,
                  "line": 1,
                },
                "start": Object {
                  "column": 17,
                  "line": 1,
                },
              },
              "operator": "PLUS",
              "right": NumberLiteral {
                "loc": Object {
                  "end": Object {
                    "column": 21,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 21,
                    "line": 1,
                  },
                },
                "type": "NUMBER_LITERAL",
                "value": 3,
              },
              "type": "BINARY_EXPRESSION",
            },
            "type": "BINARY_EXPRESSION",
          },
          "loc": Object {
            "end": Object {
              "column": 21,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 21,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;

exports[`parse it should parse string expression 1`] = `
StatementList {
  "loc": Object {
    "end": Object {
      "column": 21,
      "line": 1,
    },
    "start": Object {
      "column": 1,
      "line": 1,
    },
  },
  "statements": Array [
    VariableStatement {
      "declarations": Array [
        VariableDeclarator {
          "id": "a",
          "init": StringLiteral {
            "loc": Object {
              "end": Object {
                "column": 21,
                "line": 1,
              },
              "start": Object {
                "column": 9,
                "line": 1,
              },
            },
            "type": "STRING_LITERAL",
            "value": "hello world'",
          },
          "loc": Object {
            "end": Object {
              "column": 21,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "type": "VARIABLE_DECLARATOR",
        },
      ],
      "kind": "LET",
      "loc": Object {
        "end": Object {
          "column": 21,
          "line": 1,
        },
        "start": Object {
          "column": 1,
          "line": 1,
        },
      },
      "type": "VARIABLE_STATEMENT",
    },
  ],
  "type": "STATEMENT_LIST",
}
`;
